/* SPDX-License-Identifier: BSD-3-Clause */
/* Copyright (C) 2019 Kontron Europe GmbH */

/* Generated by the KEAPI Generator, 2017.11.07 15:06:11 +0300
 * Do not edit manually.
 */

KEAPI_RETVAL KEApiL_GetLibVersion(PKEAPI_VERSION_DATA pVersion);
KEAPI_RETVAL KEApiL_GetBoardInfo(PKEAPI_BOARD_INFO pBoardInfo);
KEAPI_RETVAL KEApiL_GetSysInfo(PKEAPI_SYSTEM_INFO pSystemInfo);
KEAPI_RETVAL KEApiL_GetBootCounter(int32_t *pBootCount);
KEAPI_RETVAL KEApiL_SystemUpTime(int32_t *pSystemUpTime);
KEAPI_RETVAL KEApiL_GetIntruderStatus(int32_t *pIntruderStatus);
KEAPI_RETVAL KEApiL_ResetIntruderStatus();
KEAPI_RETVAL KEApiL_GetPBITResult(uint32_t *pResult, uint32_t *pCumulativeResult);
KEAPI_RETVAL KEApiL_ClearPBITResult();
KEAPI_RETVAL KEApiL_GetCpuFreq(int32_t coreNr, int8_t freqType, int32_t *pFrequency);
KEAPI_RETVAL KEApiL_GetCpuInfo(PKEAPI_CPU_INFO pCpuInfo);
KEAPI_RETVAL KEApiL_GetCpuPerformance(int32_t coreNr, int8_t *pPerformancePercentage);
KEAPI_RETVAL KEApiL_GetMemoryInfo(PKEAPI_MEMORY_INFO pMemoryInfo);
KEAPI_RETVAL KEApiL_GetDiskDriveCount(int32_t *pDiskDriveCount);
KEAPI_RETVAL KEApiL_GetDiskDriveList(PKEAPI_DISK_DRIVE pDiskDrives, int32_t diskDriveCount);
KEAPI_RETVAL KEApiL_GetDiskDriveSMARTAttrCount(int32_t diskNr, int32_t *pAttrCount);
KEAPI_RETVAL KEApiL_GetDiskDriveSMARTAttrs(int32_t diskNr, PKEAPI_SMART_ATTR pAttrs, int32_t attrCount);
KEAPI_RETVAL KEApiL_GetMountPointCount(int32_t *pCount);
KEAPI_RETVAL KEApiL_GetMountPointList(PKEAPI_MOUNT_POINT pMountPointList, int32_t mountPointCount);
KEAPI_RETVAL KEApiL_GetBatteryCount(int32_t *pBatteryCount);
KEAPI_RETVAL KEApiL_GetBatteryInfo(int32_t slotNr, PKEAPI_BATTERY_INFO pBatteryInfo);
KEAPI_RETVAL KEApiL_GetBatteryState(int32_t slotNr, PKEAPI_BATTERY_STATE pBatteryState);
KEAPI_RETVAL KEApiL_PerformanceStateCaps(uint32_t *pStatesMask);
KEAPI_RETVAL KEApiL_GetPerformanceStateDescription(uint32_t state, char *pDescription);
KEAPI_RETVAL KEApiL_GetPerformanceState(uint32_t *pState);
KEAPI_RETVAL KEApiL_SetPerformanceState(uint32_t state);
KEAPI_RETVAL KEApiL_GetTempSensorCount(int32_t *pTempSensorCount);
KEAPI_RETVAL KEApiL_GetTempSensorValue(int32_t sensorNr, PKEAPI_SENSOR_VALUE pSensorValue);
KEAPI_RETVAL KEApiL_GetTempSensorValueList(PKEAPI_SENSOR_VALUE pSensorValues, int32_t sensorCount);
KEAPI_RETVAL KEApiL_GetTempSensorInfo(int32_t sensorNr, PKEAPI_SENSOR_INFO pSensorInfo);
KEAPI_RETVAL KEApiL_GetVoltageSensorCount(int32_t *pVoltageSensorCount);
KEAPI_RETVAL KEApiL_GetVoltageSensorValue(int32_t sensorNr, PKEAPI_SENSOR_VALUE pSensorValue);
KEAPI_RETVAL KEApiL_GetVoltageSensorValueList(PKEAPI_SENSOR_VALUE pSensorValues, int32_t sensorCount);
KEAPI_RETVAL KEApiL_GetVoltageSensorInfo(int32_t sensorNr, PKEAPI_SENSOR_INFO pSensorInfo);
KEAPI_RETVAL KEApiL_GetFanSensorCount(int32_t *pFanSensorCount);
KEAPI_RETVAL KEApiL_GetFanSensorValue(int32_t sensorNr, PKEAPI_SENSOR_VALUE pSensorValue);
KEAPI_RETVAL KEApiL_GetFanSensorValueList(PKEAPI_SENSOR_VALUE pSensorValues, int32_t sensorCount);
KEAPI_RETVAL KEApiL_GetFanSensorInfo(int32_t sensorNr, PKEAPI_SENSOR_INFO pSensorInfo);
KEAPI_RETVAL KEApiL_GetDisplayCount(int32_t *pDisplayCount);
KEAPI_RETVAL KEApiL_GetBacklightValue(int32_t displayNr, int32_t *pValue);
KEAPI_RETVAL KEApiL_SetBacklightValue(int32_t displayNr, int32_t value);
KEAPI_RETVAL KEApiL_GetNetworkDeviceCount(int32_t *pNetworkDeviceCount);
KEAPI_RETVAL KEApiL_GetNetworkDeviceList(PKEAPI_NETWORK_DEVICE pNetworkDevices, int32_t networkDeviceCount);
KEAPI_RETVAL KEApiL_GetPciDeviceCount(int32_t *pPciDeviceCount);
KEAPI_RETVAL KEApiL_GetPciDeviceList(PKEAPI_PCI_DEVICE pPciDevices, int32_t pciDeviceCount);
KEAPI_RETVAL KEApiL_GetStorageCount(int32_t *pStorageCount);
KEAPI_RETVAL KEApiL_GetStorageSize(int32_t storageNr, int32_t *pStorageSize);
KEAPI_RETVAL KEApiL_StorageRead(int32_t storageNr, int32_t offset, uint8_t *pData, int32_t dataLength);
KEAPI_RETVAL KEApiL_StorageWrite(int32_t storageNr, int32_t offset, uint8_t *pData, int32_t dataLength);
KEAPI_RETVAL KEApiL_GetI2cBusCount(int32_t *pI2cBusCount);
KEAPI_RETVAL KEApiL_I2cXfer(int32_t i2cNr, uint8_t i2cAddress, uint8_t *pWriteData, int32_t writeLength,
			    uint8_t *pReadData, int32_t *pReadLength);
KEAPI_RETVAL KEApiL_I2cProbe(int32_t i2cNr, uint8_t i2cAddress, uint8_t memoryAddress, uint8_t memoryAddressUsed);
KEAPI_RETVAL KEApiL_GetSpiBusCount(int32_t *pSpiBusCount);
KEAPI_RETVAL KEApiL_SpiXfer(int32_t spiNr, uint16_t deviceId, uint32_t command, uint8_t commandSize,
			    int32_t numTransfers, uint8_t *pWriteData, uint8_t *pReadData);
KEAPI_RETVAL KEApiL_GetSmbusCount(int32_t *pSmbusCount);
KEAPI_RETVAL KEApiL_SmbusQuickCommand(int32_t smbusNr, uint8_t smbusAddress, uint8_t operation);
KEAPI_RETVAL KEApiL_SmbusSendByte(int32_t smbusNr, uint8_t smbusAddress, uint8_t byte);
KEAPI_RETVAL KEApiL_SmbusReceiveByte(int32_t smbusNr, uint8_t smbusAddress, uint8_t *pByte);
KEAPI_RETVAL KEApiL_SmbusWriteByte(int32_t smbusNr, uint8_t smbusAddress, uint8_t command, uint8_t byte);
KEAPI_RETVAL KEApiL_SmbusReadByte(int32_t smbusNr, uint8_t smbusAddress, uint8_t command, uint8_t *pByte);
KEAPI_RETVAL KEApiL_SmbusWriteWord(int32_t smbusNr, uint8_t smbusAddress, uint8_t command, uint16_t word);
KEAPI_RETVAL KEApiL_SmbusReadWord(int32_t smbusNr, uint8_t smbusAddress, uint8_t command, uint16_t *pWord);
KEAPI_RETVAL KEApiL_SmbusWriteBlock(int32_t smbusNr, uint8_t smbusAddress, uint8_t command, uint8_t *pData,
				    int8_t dataLength);
KEAPI_RETVAL KEApiL_SmbusReadBlock(int32_t smbusNr, uint8_t smbusAddress, uint8_t command, uint8_t *pData,
				   int8_t *pDataLength);
KEAPI_RETVAL KEApiL_GetGpioPortCount(int32_t *pCount);
KEAPI_RETVAL KEApiL_GetGpioPortDirectionCaps(int32_t portNr, uint32_t *pIns, uint32_t *pOuts);
KEAPI_RETVAL KEApiL_GetGpioPortDirections(int32_t portNr, uint32_t *pDirections);
KEAPI_RETVAL KEApiL_SetGpioPortDirections(int32_t portNr, uint32_t directions);
KEAPI_RETVAL KEApiL_GetGpioPortLevels(int32_t portNr, uint32_t *pLevels);
KEAPI_RETVAL KEApiL_SetGpioPortLevels(int32_t portNr, uint32_t levels);
KEAPI_RETVAL KEApiL_WatchdogGetCaps(int32_t *pMaxTimeout, int32_t *pMinTimeout, int32_t *pStagesNr);
KEAPI_RETVAL KEApiL_WatchdogSetup(int32_t stage, int32_t timeout, int32_t mode);
KEAPI_RETVAL KEApiL_WatchdogEnable();
KEAPI_RETVAL KEApiL_WatchdogDisable();
KEAPI_RETVAL KEApiL_WatchdogTrigger();
KEAPI_RETVAL KEApiL_WatchdogGetExpired(int32_t *pWTE);
KEAPI_RETVAL KEApiL_WatchdogClearExpired();
KEAPI_RETVAL KEApiL_WatchdogWaitUntilExpired();
